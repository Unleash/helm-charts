apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unleash-proxy.fullname" . }}
  labels:
    {{- include "unleash-proxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "unleash-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "unleash-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "unleash-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- if .Values.proxy.apiTokenSecret.enabled }}
            - name: UNLEASH_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.proxy.apiTokenSecret.name }}"
                  key: "{{ .Values.proxy.apiTokenSecret.key }}"
            {{ else }}
            - name: UNLEASH_API_TOKEN
              value: "{{ .Values.proxy.apiToken }}"
            {{- end }}            
            {{- if .Values.proxy.clientKeysSecret.enabled }}
            - name: UNLEASH_PROXY_CLIENT_KEYS
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.proxy.clientKeysSecret.name }}"
                  key: "{{ .Values.proxy.clientKeysSecret.key }}"
            {{ else }}
            - name: UNLEASH_PROXY_CLIENT_KEYS
              value: "{{ join "," .Values.proxy.clientKeys }}"
            {{- end }}
            - name: UNLEASH_URL
              {{- if .Values.edge.enable }}
              value: "http://localhost:3063/api"
              {{- else }}
              value: "{{ .Values.proxy.serverHost }}"
              {{- end }}
           {{- if .Values.proxy.logLevel }}
            - name: LOG_LEVEL
              value: "{{ .Values.proxy.logLevel }}"
           {{- end }}
           {{- if .Values.proxy.unleashAppName }}
            - name: UNLEASH_APP_NAME
              value: "{{ .Values.proxy.unleashAppName }}"
           {{- end }}
           {{- if .Values.proxy.environment }}
            - name: UNLEASH_ENVIRONMENT
              value: "{{ .Values.proxy.environment }}"
           {{- end }}
           {{- if .Values.proxy.unleash_instance_id }}
            - name: UNLEASH_INSTANCE_ID
              value: "{{ .Values.proxy.unleash_instance_id }}"
           {{- end }}
           {{- if .Values.existingSecrets }}
             {{- toYaml .Values.existingSecrets | nindent 12 }}
           {{- end }}
           {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
           {{- end }}

          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /proxy/health
              port: http
          readinessProbe:
            httpGet:
              path: /proxy/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.edge.enable }}
        - name: unleash-edge
          args:
            - "offline"
          env:
            - name: TOKENS
              value: {{ .Values.proxy.apiToken }}
            - name: BOOTSTRAP_FILE
              value: /data/config/features.json
          image: "unleashorg/unleash-edge:v0.5.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3063
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /internal-backstage/health
              port: http
          readinessProbe:
            httpGet:
              port: http
              path: /internal-backstage/health
          resources:
            limits:
              cpu: 50m
              memory: 32Mi
            requests:
              cpu: 20m
              memory: 32Mi
          volumeMounts:
            - mountPath: "/data/config"
              name: edge-features
        {{- end }}
      {{- if .Values.edge.enable }}
      volumes:
        - name: edge-features
          configMap:
            name: edge-features
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
